//
//  MessagesViewController.swift
//  MessagesExtension
//
//  Created by Robert Masen on 6/15/16.
//  Copyright Â© 2016 Robert Masen. All rights reserved.
//

import UIKit
import Messages

class ThumbWarsViewController: MSMessagesAppViewController {
    
    var thumb: ThumbType?
    
    @IBAction func attack(_ sender: UIButton) {
        let session = MSSession()
        let attackMessage = MSMessage(session: session)
        var components = URLComponents(string: "http://www.robertmasen.pizza")
//        let dmg = URLQueryItem(name: "dmg", value: String(thumb?.attack(with:)))
//        let myHealth = URLQueryItem(name: "myHealth", value: String(thumb?.health))
//        let myLevel = URLQueryItem(name: "myLevel", value: String(thumb?.level))
//        components?.queryItems = [dmg, myHealth, myLevel]
//        attackMessage.url = components!.url
//        
//        self.activeConversation?.insert(attackMessage, localizedChangeDescription: "sent attack message with values dmg: \(dmg.value), myHealth: \(myHealth.value), myLevel: \(myLevel.value)") { value in
//            
//        }
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
        print("sending \(message.url)")
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }

}
